buildscript {
    repositories {
        mavenCentral()
        maven {
            name = "forge"
            url = "http://files.minecraftforge.net/maven"
        }
        maven {
            name = "sonatype"
            url = "https://oss.sonatype.org/content/repositories/snapshots/"
        }
    }
    dependencies {
        classpath 'net.minecraftforge.gradle:ForgeGradle:1.2-SNAPSHOT'
    }
}

apply plugin: 'forge'

repositories {
    maven { // the repo from which to get NEI and stuff
        name 'CB Repo'
        url "http://chickenbones.net/maven/"
    }
	maven {
        name 'DVS1 Maven FS'
        url 'http://dvs1.progwml6.com/files/maven'
    }
    maven {
        name 'ForgeFS'
        url 'http://files.minecraftforge.net/maven'
    }
    maven {
        name = "MM repo"
        url = "http://maven.k-4u.nl/"
    }
}

ext.configFile = file "build.properties"

configFile.withReader {
    def prop = new Properties()
    prop.load(it)
    project.ext.config = new ConfigSlurper().parse prop
}

version = config.minecraft_version + "-" + config.mod_version
group= "eviltalkingpie.pandemicraft" // http://maven.apache.org/guides/mini/guide-naming-conventions.html
archivesBaseName = "PandemiCraft"

minecraft {
    version = config.minecraft_version + "-" + config.forge_version
    
	replaceIn "reference/Reference.java"
	replace "@VERSION@", "${config.minecraft_version}.${config.mod_version}"
}

dependencies {
    // you may put jars on which you depend on in ./libs
    // or you may define them like so..
    //compile "some.group:artifact:version:classifier"
    //compile "some.group:artifact:version"
      
    // real examples
    //compile 'com.mod-buildcraft:buildcraft:6.0.8:dev'  // adds buildcraft to the dev env
    //compile 'com.googlecode.efficient-java-matrix-library:ejml:0.24' // adds ejml to the dev env

    // for more info...
    // http://www.gradle.org/docs/current/userguide/artifact_dependencies_tutorial.html
    // http://www.gradle.org/docs/current/userguide/dependency_management.html
	
	
    compile "codechicken:CodeChickenLib:${config.minecraft_version}-${config.CCLIB_version}:dev"
    compile "codechicken:CodeChickenCore:${config.minecraft_version}-${config.ccc_version}:dev"
    compile "codechicken:NotEnoughItems:${config.minecraft_version}-${config.NEI_version}:dev"
    compile "codechicken:ForgeMultipart:${config.minecraft_version}-${config.fmp_version}:dev"
	compile "mantle:Mantle:${config.minecraft_version}-${config.mantle_version}:deobf"
	//compile "tconstruct:TConstruct:${config.minecraft_version}-${config.tconstruct_version}:deobf"
    //compile "mcp.mobius.waila:Waila:${config.waila_version}:dev"
	
	compile "pneumaticCraft:PneumaticCraft-1.7.10:1.5.1-49:userdev"
	
	compile fileTree(dir: 'lib', include: '*.jar')
}

processResources
{
    // this will ensure that this task is redone when the versions change.
    inputs.property "version", project.version
    inputs.property "mcversion", project.minecraft.version

    // replace stuff in mcmod.info, nothing else
    from(sourceSets.main.resources) {
        include 'mcmod.info'
                
        // replace version and mcversion
        expand 'mod_version':project.config.mod_version, 'minecraft_version':project.config.minecraft_version
    }
        
    // copy everything else, thats not the mcmod.info
    from(sourceSets.main.resources.srcDirs) {
        exclude 'mcmod.info'
    }
}
